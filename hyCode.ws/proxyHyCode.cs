//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.6.1055.0。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="hyCodeServiceSoap", Namespace="http://tempuri.org/")]
public partial class hyCodeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback createVmcardQRcodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback modifyVmcardInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPersonInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback getActiveQrCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPersonInfoByQrCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback queryIfHasRegisteredOperationCompleted;
    
    private System.Threading.SendOrPostCallback activateVmcardQRcodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback EncryptOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeEncryptOperationCompleted;
    
    /// <remarks/>
    public hyCodeService() {
        this.Url = "http://192.168.1.13:9001/hyCodeService.asmx";
    }
    
    /// <remarks/>
    public event createVmcardQRcodeCompletedEventHandler createVmcardQRcodeCompleted;
    
    /// <remarks/>
    public event modifyVmcardInfoCompletedEventHandler modifyVmcardInfoCompleted;
    
    /// <remarks/>
    public event getPersonInfoCompletedEventHandler getPersonInfoCompleted;
    
    /// <remarks/>
    public event getActiveQrCodeCompletedEventHandler getActiveQrCodeCompleted;
    
    /// <remarks/>
    public event getPersonInfoByQrCodeCompletedEventHandler getPersonInfoByQrCodeCompleted;
    
    /// <remarks/>
    public event queryIfHasRegisteredCompletedEventHandler queryIfHasRegisteredCompleted;
    
    /// <remarks/>
    public event activateVmcardQRcodeCompletedEventHandler activateVmcardQRcodeCompleted;
    
    /// <remarks/>
    public event EncryptCompletedEventHandler EncryptCompleted;
    
    /// <remarks/>
    public event DeEncryptCompletedEventHandler DeEncryptCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createVmcardQRcode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string createVmcardQRcode(string request) {
        object[] results = this.Invoke("createVmcardQRcode", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateVmcardQRcode(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createVmcardQRcode", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcreateVmcardQRcode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void createVmcardQRcodeAsync(string request) {
        this.createVmcardQRcodeAsync(request, null);
    }
    
    /// <remarks/>
    public void createVmcardQRcodeAsync(string request, object userState) {
        if ((this.createVmcardQRcodeOperationCompleted == null)) {
            this.createVmcardQRcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateVmcardQRcodeOperationCompleted);
        }
        this.InvokeAsync("createVmcardQRcode", new object[] {
                    request}, this.createVmcardQRcodeOperationCompleted, userState);
    }
    
    private void OncreateVmcardQRcodeOperationCompleted(object arg) {
        if ((this.createVmcardQRcodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createVmcardQRcodeCompleted(this, new createVmcardQRcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/modifyVmcardInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string modifyVmcardInfo(string request) {
        object[] results = this.Invoke("modifyVmcardInfo", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmodifyVmcardInfo(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("modifyVmcardInfo", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndmodifyVmcardInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void modifyVmcardInfoAsync(string request) {
        this.modifyVmcardInfoAsync(request, null);
    }
    
    /// <remarks/>
    public void modifyVmcardInfoAsync(string request, object userState) {
        if ((this.modifyVmcardInfoOperationCompleted == null)) {
            this.modifyVmcardInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyVmcardInfoOperationCompleted);
        }
        this.InvokeAsync("modifyVmcardInfo", new object[] {
                    request}, this.modifyVmcardInfoOperationCompleted, userState);
    }
    
    private void OnmodifyVmcardInfoOperationCompleted(object arg) {
        if ((this.modifyVmcardInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.modifyVmcardInfoCompleted(this, new modifyVmcardInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPersonInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getPersonInfo(string request) {
        object[] results = this.Invoke("getPersonInfo", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPersonInfo(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPersonInfo", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetPersonInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getPersonInfoAsync(string request) {
        this.getPersonInfoAsync(request, null);
    }
    
    /// <remarks/>
    public void getPersonInfoAsync(string request, object userState) {
        if ((this.getPersonInfoOperationCompleted == null)) {
            this.getPersonInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonInfoOperationCompleted);
        }
        this.InvokeAsync("getPersonInfo", new object[] {
                    request}, this.getPersonInfoOperationCompleted, userState);
    }
    
    private void OngetPersonInfoOperationCompleted(object arg) {
        if ((this.getPersonInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPersonInfoCompleted(this, new getPersonInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActiveQrCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getActiveQrCode(string request) {
        object[] results = this.Invoke("getActiveQrCode", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetActiveQrCode(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getActiveQrCode", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetActiveQrCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getActiveQrCodeAsync(string request) {
        this.getActiveQrCodeAsync(request, null);
    }
    
    /// <remarks/>
    public void getActiveQrCodeAsync(string request, object userState) {
        if ((this.getActiveQrCodeOperationCompleted == null)) {
            this.getActiveQrCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveQrCodeOperationCompleted);
        }
        this.InvokeAsync("getActiveQrCode", new object[] {
                    request}, this.getActiveQrCodeOperationCompleted, userState);
    }
    
    private void OngetActiveQrCodeOperationCompleted(object arg) {
        if ((this.getActiveQrCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getActiveQrCodeCompleted(this, new getActiveQrCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPersonInfoByQrCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getPersonInfoByQrCode(string request) {
        object[] results = this.Invoke("getPersonInfoByQrCode", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPersonInfoByQrCode(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPersonInfoByQrCode", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetPersonInfoByQrCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getPersonInfoByQrCodeAsync(string request) {
        this.getPersonInfoByQrCodeAsync(request, null);
    }
    
    /// <remarks/>
    public void getPersonInfoByQrCodeAsync(string request, object userState) {
        if ((this.getPersonInfoByQrCodeOperationCompleted == null)) {
            this.getPersonInfoByQrCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonInfoByQrCodeOperationCompleted);
        }
        this.InvokeAsync("getPersonInfoByQrCode", new object[] {
                    request}, this.getPersonInfoByQrCodeOperationCompleted, userState);
    }
    
    private void OngetPersonInfoByQrCodeOperationCompleted(object arg) {
        if ((this.getPersonInfoByQrCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPersonInfoByQrCodeCompleted(this, new getPersonInfoByQrCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/queryIfHasRegistered", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string queryIfHasRegistered(string request) {
        object[] results = this.Invoke("queryIfHasRegistered", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryIfHasRegistered(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryIfHasRegistered", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndqueryIfHasRegistered(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void queryIfHasRegisteredAsync(string request) {
        this.queryIfHasRegisteredAsync(request, null);
    }
    
    /// <remarks/>
    public void queryIfHasRegisteredAsync(string request, object userState) {
        if ((this.queryIfHasRegisteredOperationCompleted == null)) {
            this.queryIfHasRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryIfHasRegisteredOperationCompleted);
        }
        this.InvokeAsync("queryIfHasRegistered", new object[] {
                    request}, this.queryIfHasRegisteredOperationCompleted, userState);
    }
    
    private void OnqueryIfHasRegisteredOperationCompleted(object arg) {
        if ((this.queryIfHasRegisteredCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryIfHasRegisteredCompleted(this, new queryIfHasRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/activateVmcardQRcode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string activateVmcardQRcode(string request) {
        object[] results = this.Invoke("activateVmcardQRcode", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginactivateVmcardQRcode(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("activateVmcardQRcode", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndactivateVmcardQRcode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void activateVmcardQRcodeAsync(string request) {
        this.activateVmcardQRcodeAsync(request, null);
    }
    
    /// <remarks/>
    public void activateVmcardQRcodeAsync(string request, object userState) {
        if ((this.activateVmcardQRcodeOperationCompleted == null)) {
            this.activateVmcardQRcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivateVmcardQRcodeOperationCompleted);
        }
        this.InvokeAsync("activateVmcardQRcode", new object[] {
                    request}, this.activateVmcardQRcodeOperationCompleted, userState);
    }
    
    private void OnactivateVmcardQRcodeOperationCompleted(object arg) {
        if ((this.activateVmcardQRcodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.activateVmcardQRcodeCompleted(this, new activateVmcardQRcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Encrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Encrypt(string request) {
        object[] results = this.Invoke("Encrypt", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginEncrypt(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Encrypt", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndEncrypt(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void EncryptAsync(string request) {
        this.EncryptAsync(request, null);
    }
    
    /// <remarks/>
    public void EncryptAsync(string request, object userState) {
        if ((this.EncryptOperationCompleted == null)) {
            this.EncryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptOperationCompleted);
        }
        this.InvokeAsync("Encrypt", new object[] {
                    request}, this.EncryptOperationCompleted, userState);
    }
    
    private void OnEncryptOperationCompleted(object arg) {
        if ((this.EncryptCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EncryptCompleted(this, new EncryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeEncrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string DeEncrypt(string request) {
        object[] results = this.Invoke("DeEncrypt", new object[] {
                    request});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeEncrypt(string request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeEncrypt", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndDeEncrypt(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void DeEncryptAsync(string request) {
        this.DeEncryptAsync(request, null);
    }
    
    /// <remarks/>
    public void DeEncryptAsync(string request, object userState) {
        if ((this.DeEncryptOperationCompleted == null)) {
            this.DeEncryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeEncryptOperationCompleted);
        }
        this.InvokeAsync("DeEncrypt", new object[] {
                    request}, this.DeEncryptOperationCompleted, userState);
    }
    
    private void OnDeEncryptOperationCompleted(object arg) {
        if ((this.DeEncryptCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeEncryptCompleted(this, new DeEncryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void createVmcardQRcodeCompletedEventHandler(object sender, createVmcardQRcodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createVmcardQRcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createVmcardQRcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void modifyVmcardInfoCompletedEventHandler(object sender, modifyVmcardInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class modifyVmcardInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal modifyVmcardInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getPersonInfoCompletedEventHandler(object sender, getPersonInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPersonInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPersonInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getActiveQrCodeCompletedEventHandler(object sender, getActiveQrCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getActiveQrCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getActiveQrCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getPersonInfoByQrCodeCompletedEventHandler(object sender, getPersonInfoByQrCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPersonInfoByQrCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPersonInfoByQrCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void queryIfHasRegisteredCompletedEventHandler(object sender, queryIfHasRegisteredCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryIfHasRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryIfHasRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void activateVmcardQRcodeCompletedEventHandler(object sender, activateVmcardQRcodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class activateVmcardQRcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal activateVmcardQRcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void EncryptCompletedEventHandler(object sender, EncryptCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EncryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal EncryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void DeEncryptCompletedEventHandler(object sender, DeEncryptCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeEncryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeEncryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
